Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    lcd.o(.ARM.exidx.text.LCD_create) refers to lcd.o(.text.LCD_create) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_CTRL_BUS) refers to lcd.o(.text.LCD_CTRL_BUS) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_DATA_BUS) refers to lcd.o(.text.LCD_DATA_BUS) for [Anonymous Symbol]
    lcd.o(.text.LCD_setup) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    lcd.o(.text.LCD_setup) refers to lcd.o(.text.LCD_CTRL_BUS) for LCD_CTRL_BUS
    lcd.o(.text.LCD_setup) refers to gpio.o(.text.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    lcd.o(.text.LCD_setup) refers to lcd.o(.text.LCD_DATA_BUS) for LCD_DATA_BUS
    lcd.o(.ARM.exidx.text.LCD_setup) refers to lcd.o(.text.LCD_setup) for [Anonymous Symbol]
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_setup) for LCD_setup
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_CTRL_BUS) for LCD_CTRL_BUS
    lcd.o(.text.LCD_init) refers to gpio.o(.text.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_DATA_BUS) for LCD_DATA_BUS
    lcd.o(.text.LCD_init) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_sendNibble) for LCD_sendNibble
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_clear) for LCD_clear
    lcd.o(.ARM.exidx.text.LCD_init) refers to lcd.o(.text.LCD_init) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendNibble) refers to gpio.o(.text.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_sendNibble) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_sendNibble) refers to lcd.o(.text.LCD_sendNibble) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendByte) refers to gpio.o(.text.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_sendByte) refers to lcd.o(.text.LCD_inc_cnt) for LCD_inc_cnt
    lcd.o(.text.LCD_sendByte) refers to lcd.o(.text.LCD_sendNibble) for LCD_sendNibble
    lcd.o(.ARM.exidx.text.LCD_sendByte) refers to lcd.o(.text.LCD_sendByte) for [Anonymous Symbol]
    lcd.o(.text.LCD_clear) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.text.LCD_clear) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_clear) refers to lcd.o(.text.LCD_clear) for [Anonymous Symbol]
    lcd.o(.text.LCD_inc_cnt) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_inc_cnt) refers to lcd.o(.text.LCD_inc_cnt) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendString) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCD_sendString) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_sendString) refers to lcd.o(.text.LCD_sendString) for [Anonymous Symbol]
    lcd.o(.text.LCD_setPosition) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_setPosition) refers to lcd.o(.text.LCD_setPosition) for [Anonymous Symbol]
    lcd.o(.text.LCD_sendNum) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    lcd.o(.ARM.exidx.text.LCD_sendNum) refers to lcd.o(.text.LCD_sendNum) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIODirModeSet) refers to gpio.o(.text.GPIODirModeSet) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIODirModeGet) refers to gpio.o(.text.GPIODirModeGet) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOIntTypeSet) refers to gpio.o(.text.GPIOIntTypeSet) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOIntTypeGet) refers to gpio.o(.text.GPIOIntTypeGet) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOPadConfigSet) refers to gpio.o(.text.GPIOPadConfigSet) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOPadConfigGet) refers to gpio.o(.text.GPIOPadConfigGet) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOIntEnable) refers to gpio.o(.text.GPIOIntEnable) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOIntDisable) refers to gpio.o(.text.GPIOIntDisable) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOIntStatus) refers to gpio.o(.text.GPIOIntStatus) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOIntClear) refers to gpio.o(.text.GPIOIntClear) for [Anonymous Symbol]
    gpio.o(.text.GPIOIntRegister) refers to gpio.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(.text.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(.text.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(.ARM.exidx.text.GPIOIntRegister) refers to gpio.o(.text.GPIOIntRegister) for [Anonymous Symbol]
    gpio.o(.text._GPIOIntNumberGet) refers to gpio.o(.rodata.g_ppui32GPIOIntMapSnowflake) for g_ppui32GPIOIntMapSnowflake
    gpio.o(.text._GPIOIntNumberGet) refers to gpio.o(.rodata.g_ppui32GPIOIntMapBlizzard) for g_ppui32GPIOIntMapBlizzard
    gpio.o(.ARM.exidx.text._GPIOIntNumberGet) refers to gpio.o(.text._GPIOIntNumberGet) for [Anonymous Symbol]
    gpio.o(.text.GPIOIntUnregister) refers to gpio.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(.text.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(.text.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(.ARM.exidx.text.GPIOIntUnregister) refers to gpio.o(.text.GPIOIntUnregister) for [Anonymous Symbol]
    gpio.o(.text.GPIOIntRegisterPin) refers to gpio.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(.text.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(.text.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(.ARM.exidx.text.GPIOIntRegisterPin) refers to gpio.o(.text.GPIOIntRegisterPin) for [Anonymous Symbol]
    gpio.o(.text.GPIOIntUnregisterPin) refers to gpio.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(.text.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(.text.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(.ARM.exidx.text.GPIOIntUnregisterPin) refers to gpio.o(.text.GPIOIntUnregisterPin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOPinRead) refers to gpio.o(.text.GPIOPinRead) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOPinWrite) refers to gpio.o(.text.GPIOPinWrite) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeADC) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeADC) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeADC) refers to gpio.o(.text.GPIOPinTypeADC) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeCAN) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeCAN) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeCAN) refers to gpio.o(.text.GPIOPinTypeCAN) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeComparator) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeComparator) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeComparator) refers to gpio.o(.text.GPIOPinTypeComparator) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeComparatorOutput) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeComparatorOutput) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeComparatorOutput) refers to gpio.o(.text.GPIOPinTypeComparatorOutput) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeDIVSCLK) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeDIVSCLK) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeDIVSCLK) refers to gpio.o(.text.GPIOPinTypeDIVSCLK) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeEPI) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeEPI) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeEPI) refers to gpio.o(.text.GPIOPinTypeEPI) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeEthernetLED) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeEthernetLED) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeEthernetLED) refers to gpio.o(.text.GPIOPinTypeEthernetLED) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeEthernetMII) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeEthernetMII) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeEthernetMII) refers to gpio.o(.text.GPIOPinTypeEthernetMII) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeGPIOInput) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeGPIOInput) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeGPIOInput) refers to gpio.o(.text.GPIOPinTypeGPIOInput) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeGPIOOutput) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.text.GPIOPinTypeGPIOOutput) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeGPIOOutput) refers to gpio.o(.text.GPIOPinTypeGPIOOutput) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeGPIOOutputOD) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.text.GPIOPinTypeGPIOOutputOD) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeGPIOOutputOD) refers to gpio.o(.text.GPIOPinTypeGPIOOutputOD) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(.text.GPIOPinTypeHibernateRTCCLK) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeI2C) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeI2C) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeI2C) refers to gpio.o(.text.GPIOPinTypeI2C) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeI2CSCL) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeI2CSCL) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeI2CSCL) refers to gpio.o(.text.GPIOPinTypeI2CSCL) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeLCD) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeLCD) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeLCD) refers to gpio.o(.text.GPIOPinTypeLCD) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeOneWire) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeOneWire) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeOneWire) refers to gpio.o(.text.GPIOPinTypeOneWire) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypePWM) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypePWM) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypePWM) refers to gpio.o(.text.GPIOPinTypePWM) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeQEI) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeQEI) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeQEI) refers to gpio.o(.text.GPIOPinTypeQEI) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeSSI) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeSSI) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeSSI) refers to gpio.o(.text.GPIOPinTypeSSI) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeTimer) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeTimer) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeTimer) refers to gpio.o(.text.GPIOPinTypeTimer) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeTrace) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeTrace) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeTrace) refers to gpio.o(.text.GPIOPinTypeTrace) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeUART) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeUART) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeUART) refers to gpio.o(.text.GPIOPinTypeUART) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeUSBAnalog) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeUSBAnalog) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeUSBAnalog) refers to gpio.o(.text.GPIOPinTypeUSBAnalog) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeUSBDigital) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeUSBDigital) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeUSBDigital) refers to gpio.o(.text.GPIOPinTypeUSBDigital) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeWakeHigh) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeWakeHigh) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeWakeHigh) refers to gpio.o(.text.GPIOPinTypeWakeHigh) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinTypeWakeLow) refers to gpio.o(.text.GPIODirModeSet) for GPIODirModeSet
    gpio.o(.text.GPIOPinTypeWakeLow) refers to gpio.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(.ARM.exidx.text.GPIOPinTypeWakeLow) refers to gpio.o(.text.GPIOPinTypeWakeLow) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOPinWakeStatus) refers to gpio.o(.text.GPIOPinWakeStatus) for [Anonymous Symbol]
    gpio.o(.text.GPIOPinConfigure) refers to gpio.o(.rodata.g_pui32GPIOBaseAddrs) for g_pui32GPIOBaseAddrs
    gpio.o(.ARM.exidx.text.GPIOPinConfigure) refers to gpio.o(.text.GPIOPinConfigure) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIODMATriggerEnable) refers to gpio.o(.text.GPIODMATriggerEnable) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIODMATriggerDisable) refers to gpio.o(.text.GPIODMATriggerDisable) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOADCTriggerEnable) refers to gpio.o(.text.GPIOADCTriggerEnable) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOADCTriggerDisable) refers to gpio.o(.text.GPIOADCTriggerDisable) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOUnlockPin) refers to gpio.o(.text.GPIOUnlockPin) for [Anonymous Symbol]
    trial2.o(.text.PROJECT_Init) refers to trial2.o(.text.PORTF_init) for PORTF_init
    trial2.o(.text.PROJECT_Init) refers to trial2.o(.text.PORTE_init) for PORTE_init
    trial2.o(.text.PROJECT_Init) refers to trial2.o(.text.ADC_Init) for ADC_Init
    trial2.o(.text.PROJECT_Init) refers to trial2.o(.text.UART_Init) for UART_Init
    trial2.o(.text.PROJECT_Init) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    trial2.o(.text.PROJECT_Init) refers to trial2.o(.bss.xUARTQueue) for xUARTQueue
    trial2.o(.text.PROJECT_Init) refers to trial2.o(.bss.xLCDQueue) for xLCDQueue
    trial2.o(.text.PROJECT_Init) refers to trial2.o(.bss.xBuzzerQueue) for xBuzzerQueue
    trial2.o(.ARM.exidx.text.PROJECT_Init) refers to trial2.o(.text.PROJECT_Init) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.PORTF_init) refers to trial2.o(.text.PORTF_init) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.PORTE_init) refers to trial2.o(.text.PORTE_init) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.ADC_Init) refers to trial2.o(.text.ADC_Init) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.UART_Init) refers to trial2.o(.text.UART_Init) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.UART0_Receiver) refers to trial2.o(.text.UART0_Receiver) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.UART0_Transmitter) refers to trial2.o(.text.UART0_Transmitter) for [Anonymous Symbol]
    trial2.o(.text.printstring) refers to trial2.o(.text.UART0_Transmitter) for UART0_Transmitter
    trial2.o(.ARM.exidx.text.printstring) refers to trial2.o(.text.printstring) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.Delay) refers to trial2.o(.text.Delay) for [Anonymous Symbol]
    trial2.o(.text.Main_Task) refers to trial2.o(.text.itoa) for itoa
    trial2.o(.text.Main_Task) refers to trial2.o(.bss.xLCDQueue) for xLCDQueue
    trial2.o(.text.Main_Task) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    trial2.o(.text.Main_Task) refers to trial2.o(.bss.xBuzzerQueue) for xBuzzerQueue
    trial2.o(.text.Main_Task) refers to trial2.o(.bss.xUARTQueue) for xUARTQueue
    trial2.o(.text.Main_Task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    trial2.o(.text.Main_Task) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    trial2.o(.text.Main_Task) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    trial2.o(.text.Main_Task) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    trial2.o(.text.Main_Task) refers to dflt_clz.o(x$fpl$dflt) for __aeabi_i2d
    trial2.o(.text.Main_Task) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    trial2.o(.text.Main_Task) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    trial2.o(.ARM.exidx.text.Main_Task) refers to trial2.o(.text.Main_Task) for [Anonymous Symbol]
    trial2.o(.text.itoa) refers to trial2.o(.text.reverse) for reverse
    trial2.o(.ARM.exidx.text.itoa) refers to trial2.o(.text.itoa) for [Anonymous Symbol]
    trial2.o(.text.Buzzer_Task) refers to trial2.o(.bss.xBuzzerQueue) for xBuzzerQueue
    trial2.o(.text.Buzzer_Task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    trial2.o(.ARM.exidx.text.Buzzer_Task) refers to trial2.o(.text.Buzzer_Task) for [Anonymous Symbol]
    trial2.o(.text.LCD_Task) refers to lcd.o(.text.LCD_create) for LCD_create
    trial2.o(.text.LCD_Task) refers to lcd.o(.text.LCD_setup) for LCD_setup
    trial2.o(.text.LCD_Task) refers to lcd.o(.text.LCD_init) for LCD_init
    trial2.o(.text.LCD_Task) refers to trial2.o(.bss.xLCDQueue) for xLCDQueue
    trial2.o(.text.LCD_Task) refers to trial2.o(.rodata.str1.1) for .L.str.1
    trial2.o(.text.LCD_Task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    trial2.o(.text.LCD_Task) refers to lcd.o(.text.LCD_clear) for LCD_clear
    trial2.o(.text.LCD_Task) refers to lcd.o(.text.LCD_setPosition) for LCD_setPosition
    trial2.o(.text.LCD_Task) refers to lcd.o(.text.LCD_sendString) for LCD_sendString
    trial2.o(.text.LCD_Task) refers to lcd.o(.text.LCD_sendByte) for LCD_sendByte
    trial2.o(.text.LCD_Task) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    trial2.o(.ARM.exidx.text.LCD_Task) refers to trial2.o(.text.LCD_Task) for [Anonymous Symbol]
    trial2.o(.text.UART_Task) refers to trial2.o(.bss.xUARTQueue) for xUARTQueue
    trial2.o(.text.UART_Task) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    trial2.o(.text.UART_Task) refers to trial2.o(.text.printstring) for printstring
    trial2.o(.text.UART_Task) refers to trial2.o(.text.UART0_Receiver) for UART0_Receiver
    trial2.o(.text.UART_Task) refers to trial2.o(.text.UART0_Transmitter) for UART0_Transmitter
    trial2.o(.ARM.exidx.text.UART_Task) refers to trial2.o(.text.UART_Task) for [Anonymous Symbol]
    trial2.o(.ARM.exidx.text.swap) refers to trial2.o(.text.swap) for [Anonymous Symbol]
    trial2.o(.text.reverse) refers to trial2.o(.text.swap) for swap
    trial2.o(.ARM.exidx.text.reverse) refers to trial2.o(.text.reverse) for [Anonymous Symbol]
    main0.o(.text.main) refers to trial2.o(.text.PROJECT_Init) for PROJECT_Init
    main0.o(.text.main) refers to trial2.o(.text.Main_Task) for Main_Task
    main0.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main0.o(.text.main) refers to trial2.o(.text.UART_Task) for UART_Task
    main0.o(.text.main) refers to trial2.o(.text.LCD_Task) for LCD_Task
    main0.o(.text.main) refers to trial2.o(.text.Buzzer_Task) for Buzzer_Task
    main0.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main0.o(.ARM.exidx.text.main) refers to main0.o(.text.main) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.text.getOscClk) refers to system_tm4c123.o(.rodata..Lswitch.table.getOscClk) for .Lswitch.table.getOscClk
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(x$fpl$d2f) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    d2f.o(x$fpl$d2f) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    d2f.o(x$fpl$d2f) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main0.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_create), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_CTRL_BUS), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_DATA_BUS), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_setup), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendNibble), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendByte), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_clear), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_inc_cnt), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendString), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_setPosition), (8 bytes).
    Removing lcd.o(.text.LCD_sendNum), (62 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_sendNum), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIODirModeSet), (8 bytes).
    Removing gpio.o(.text.GPIODirModeGet), (32 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIODirModeGet), (8 bytes).
    Removing gpio.o(.text.GPIOIntTypeSet), (78 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntTypeSet), (8 bytes).
    Removing gpio.o(.text.GPIOIntTypeGet), (54 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntTypeGet), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPadConfigSet), (8 bytes).
    Removing gpio.o(.text.GPIOPadConfigGet), (198 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPadConfigGet), (8 bytes).
    Removing gpio.o(.text.GPIOIntEnable), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntEnable), (8 bytes).
    Removing gpio.o(.text.GPIOIntDisable), (14 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntDisable), (8 bytes).
    Removing gpio.o(.text.GPIOIntStatus), (16 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntStatus), (8 bytes).
    Removing gpio.o(.text.GPIOIntClear), (6 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntClear), (8 bytes).
    Removing gpio.o(.text.GPIOIntRegister), (24 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntRegister), (8 bytes).
    Removing gpio.o(.text._GPIOIntNumberGet), (82 bytes).
    Removing gpio.o(.ARM.exidx.text._GPIOIntNumberGet), (8 bytes).
    Removing gpio.o(.text.GPIOIntUnregister), (20 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntUnregister), (8 bytes).
    Removing gpio.o(.text.GPIOIntRegisterPin), (28 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntRegisterPin), (8 bytes).
    Removing gpio.o(.text.GPIOIntUnregisterPin), (24 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOIntUnregisterPin), (8 bytes).
    Removing gpio.o(.text.GPIOPinRead), (6 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinRead), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinWrite), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeADC), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeADC), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeCAN), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeCAN), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeComparator), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeComparator), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeComparatorOutput), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeComparatorOutput), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeDIVSCLK), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeDIVSCLK), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeEPI), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeEPI), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeEthernetLED), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeEthernetLED), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeEthernetMII), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeEthernetMII), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeGPIOInput), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeGPIOInput), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeGPIOOutput), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeGPIOOutputOD), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeGPIOOutputOD), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeHibernateRTCCLK), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeHibernateRTCCLK), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeI2C), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeI2C), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeI2CSCL), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeI2CSCL), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeLCD), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeLCD), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeOneWire), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeOneWire), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypePWM), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypePWM), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeQEI), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeQEI), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeSSI), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeSSI), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeTimer), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeTimer), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeTrace), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeTrace), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeUART), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeUART), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeUSBAnalog), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeUSBAnalog), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeUSBDigital), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeUSBDigital), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeWakeHigh), (28 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeWakeHigh), (8 bytes).
    Removing gpio.o(.text.GPIOPinTypeWakeLow), (28 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinTypeWakeLow), (8 bytes).
    Removing gpio.o(.text.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinWakeStatus), (8 bytes).
    Removing gpio.o(.text.GPIOPinConfigure), (66 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOPinConfigure), (8 bytes).
    Removing gpio.o(.text.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIODMATriggerEnable), (8 bytes).
    Removing gpio.o(.text.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIODMATriggerDisable), (8 bytes).
    Removing gpio.o(.text.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOADCTriggerEnable), (8 bytes).
    Removing gpio.o(.text.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOADCTriggerDisable), (8 bytes).
    Removing gpio.o(.text.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOUnlockPin), (8 bytes).
    Removing gpio.o(.rodata.g_pui32GPIOBaseAddrs), (144 bytes).
    Removing gpio.o(.rodata.g_ppui32GPIOIntMapBlizzard), (192 bytes).
    Removing gpio.o(.rodata.g_ppui32GPIOIntMapSnowflake), (216 bytes).
    Removing trial2.o(.text), (0 bytes).
    Removing trial2.o(.ARM.exidx.text.PROJECT_Init), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.PORTF_init), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.PORTE_init), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.UART0_Receiver), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.UART0_Transmitter), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.printstring), (8 bytes).
    Removing trial2.o(.text.Delay), (2 bytes).
    Removing trial2.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.Main_Task), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.itoa), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.Buzzer_Task), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.LCD_Task), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.UART_Task), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.swap), (8 bytes).
    Removing trial2.o(.ARM.exidx.text.reverse), (8 bytes).
    Removing main0.o(.text), (0 bytes).
    Removing main0.o(.ARM.exidx.text.main), (8 bytes).
    Removing main0.o(.ARM.use_no_argv), (4 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (132 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (56 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.getOscClk), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (32 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (454 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (282 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (226 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (18 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (376 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (170 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (30 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (238 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.text.vTaskDelayUntil), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (142 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (176 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (154 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (170 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (256 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (300 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyValueClear), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntEnable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntRegister), (52 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing interrupt.o(.constdata), (268 bytes).
    Removing interrupt.o(vtable), (620 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReady), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).
    Removing cpu.o(.emb_text), (38 bytes).

428 unused section(s) (total 15990 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/d2f.s                           0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dfix.s                          0x00000000   Number         0  dfix.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    Main0.c                                  0x00000000   Number         0  main0.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    Trial2.c                                 0x00000000   Number         0  trial2.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000002e6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000002e8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ea   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002ec   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002ec   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002ec   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002f6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002fe   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000300   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000300   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000304   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000030c   Number         0  sysctl.o(.emb_text)
    .emb_text                                0x0000030c   Section        6  sysctl.o(.emb_text)
    $v0                                      0x00000314   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000314   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000428   Section        0  strlen.o(.text)
    .text                                    0x00000466   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004f0   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000500   Section        0  heapauxi.o(.text)
    .text                                    0x00000506   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0000056a   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005b8   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000602   Section        0  exit.o(.text)
    .text                                    0x00000614   Section        8  libspace.o(.text)
    .text                                    0x0000061c   Section        0  sys_exit.o(.text)
    .text                                    0x00000628   Section        2  use_no_semi.o(.text)
    .text                                    0x0000062a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x0000062c   Section        0  trial2.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x000006a0   Section        0  trial2.o(.text.Buzzer_Task)
    [Anonymous Symbol]                       0x000006dc   Section        0  gpio.o(.text.GPIODirModeSet)
    [Anonymous Symbol]                       0x00000708   Section        0  gpio.o(.text.GPIOPadConfigSet)
    [Anonymous Symbol]                       0x00000884   Section        0  gpio.o(.text.GPIOPinTypeGPIOOutput)
    [Anonymous Symbol]                       0x000008a0   Section        0  gpio.o(.text.GPIOPinWrite)
    [Anonymous Symbol]                       0x000008a8   Section        0  lcd.o(.text.LCD_CTRL_BUS)
    [Anonymous Symbol]                       0x000008b4   Section        0  lcd.o(.text.LCD_DATA_BUS)
    [Anonymous Symbol]                       0x000008cc   Section        0  trial2.o(.text.LCD_Task)
    [Anonymous Symbol]                       0x000009ac   Section        0  lcd.o(.text.LCD_clear)
    [Anonymous Symbol]                       0x000009c4   Section        0  lcd.o(.text.LCD_create)
    [Anonymous Symbol]                       0x00000a04   Section        0  lcd.o(.text.LCD_inc_cnt)
    [Anonymous Symbol]                       0x00000a40   Section        0  lcd.o(.text.LCD_init)
    [Anonymous Symbol]                       0x00000ae4   Section        0  lcd.o(.text.LCD_sendByte)
    [Anonymous Symbol]                       0x00000b30   Section        0  lcd.o(.text.LCD_sendNibble)
    [Anonymous Symbol]                       0x00000b88   Section        0  lcd.o(.text.LCD_sendString)
    [Anonymous Symbol]                       0x00000bb4   Section        0  lcd.o(.text.LCD_setPosition)
    [Anonymous Symbol]                       0x00000bd8   Section        0  lcd.o(.text.LCD_setup)
    [Anonymous Symbol]                       0x00000c10   Section        0  trial2.o(.text.Main_Task)
    [Anonymous Symbol]                       0x00000db0   Section        0  trial2.o(.text.PORTE_init)
    [Anonymous Symbol]                       0x00000dec   Section        0  trial2.o(.text.PORTF_init)
    [Anonymous Symbol]                       0x00000e34   Section        0  trial2.o(.text.PROJECT_Init)
    [Anonymous Symbol]                       0x00000e90   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000ef0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000f00   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000f20   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000f24   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000f54   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000fc4   Section        0  trial2.o(.text.UART0_Receiver)
    [Anonymous Symbol]                       0x00000fd8   Section        0  trial2.o(.text.UART0_Transmitter)
    [Anonymous Symbol]                       0x00000fec   Section        0  trial2.o(.text.UART_Init)
    [Anonymous Symbol]                       0x00001050   Section        0  trial2.o(.text.UART_Task)
    [Anonymous Symbol]                       0x00001110   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x0000114c   Section        0  trial2.o(.text.itoa)
    [Anonymous Symbol]                       0x000011b8   Section        0  main0.o(.text.main)
    [Anonymous Symbol]                       0x00001270   Section        0  trial2.o(.text.printstring)
    prvAddCurrentTaskToDelayedList           0x0000128d   Thumb Code   170  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x0000128c   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001339   Thumb Code   174  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001338   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x000013e9   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x000013e8   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001439   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001438   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001461   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001460   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x000014dd   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x000014dc   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetExpectedIdleTime                   0x000014f1   Thumb Code    68  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x000014f0   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvIdleTask                              0x00001535   Thumb Code   114  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001534   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x000015a9   Thumb Code    36  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000015a8   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000015cd   Thumb Code   156  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000015cc   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001669   Thumb Code   110  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001668   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvIsQueueEmpty                          0x000016d9   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000016d8   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x000016f1   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x000016f0   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x0000170d   Thumb Code   118  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x0000170c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001785   Thumb Code    34  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001784   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x000017ad   Thumb Code    40  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000017ac   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x000017d5   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000017d4   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x00001809   Thumb Code   134  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001808   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001890   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x000018ec   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00001914   Section        0  trial2.o(.text.reverse)
    [Anonymous Symbol]                       0x00001934   Section        0  trial2.o(.text.swap)
    [Anonymous Symbol]                       0x00001940   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001964   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x0000197c   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001984   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x000019c0   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x000019dd   Thumb Code    14  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000019dc   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000019f0   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00001a38   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00001a68   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001a84   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00001ae8   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00001bfc   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00001c50   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00001c6c   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00001c7c   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00001cb0   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00001d3c   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00001d74   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x00001d84   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00001e0c   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00001f20   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00001f64   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00001fe4   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x000021b4   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00002338   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000023dc   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x0000243c   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002464   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x000025c8   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x0000267c   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00002718   Section        0  tasks.o(.text.xTaskResumeAll)
    i.SysCtlPeripheralEnable                 0x00002830   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    $v0                                      0x00002858   Number         0  d2f.o(x$fpl$d2f)
    x$fpl$d2f                                0x00002858   Section       98  d2f.o(x$fpl$d2f)
    $v0                                      0x000028bc   Number         0  ddiv.o(x$fpl$ddiv)
    x$fpl$ddiv                               0x000028bc   Section      692  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x000028c3   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    $v0                                      0x00002b70   Number         0  dfix.o(x$fpl$dfix)
    x$fpl$dfix                               0x00002b70   Section       94  dfix.o(x$fpl$dfix)
    $v0                                      0x00002bce   Number         0  dflt_clz.o(x$fpl$dflt)
    x$fpl$dflt                               0x00002bce   Section       46  dflt_clz.o(x$fpl$dflt)
    $v0                                      0x00002bfc   Number         0  dmul.o(x$fpl$dmul)
    x$fpl$dmul                               0x00002bfc   Section      340  dmul.o(x$fpl$dmul)
    $v0                                      0x00002d50   Number         0  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dnaninf                            0x00002d50   Section      156  dnaninf.o(x$fpl$dnaninf)
    $v0                                      0x00002dec   Number         0  dretinf.o(x$fpl$dretinf)
    x$fpl$dretinf                            0x00002dec   Section       12  dretinf.o(x$fpl$dretinf)
    $v0                                      0x00002df8   Number         0  f2d.o(x$fpl$f2d)
    x$fpl$f2d                                0x00002df8   Section       86  f2d.o(x$fpl$f2d)
    $v0                                      0x00002e4e   Number         0  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fnaninf                            0x00002e4e   Section      140  fnaninf.o(x$fpl$fnaninf)
    $v0                                      0x00002eda   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00002eda   Section       26  fpinit.o(x$fpl$fpinit)
    $v0                                      0x00002ef4   Number         0  fretinf.o(x$fpl$fretinf)
    x$fpl$fretinf                            0x00002ef4   Section       10  fretinf.o(x$fpl$fretinf)
    .L.str.1                                 0x00002efe   Data           2  trial2.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00002efe   Section        0  trial2.o(.rodata.str1.1)
    x$fpl$usenofp                            0x00002efe   Section        0  usenofp.o(x$fpl$usenofp)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    pvPortMalloc.pucAlignedHeap              0x20000068   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x20000068   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    pxDelayedTaskList                        0x20000070   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000070   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000074   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000074   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x20000078   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000078   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200000dc   Data       16384  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200000dc   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x200040dc   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x200040dc   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x200040e0   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x200040e0   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x200040e4   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x200040e4   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x200040e8   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x200040e8   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x200040ec   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200040ec   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200040f0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200040f0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200040f4   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200040f4   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200040f8   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200040f8   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200040fc   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200040fc   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x20004104   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20004104   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20004118   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20004118   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x2000412c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x2000412c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x20004134   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x20004134   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x20004138   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x20004138   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x2000413c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x2000413c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20004140   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20004140   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x20004144   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20004144   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20004148   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20004148   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x2000415c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x2000415c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20004160   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20004160   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20004174   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20004174   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20004188   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20004188   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20004190   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20004190   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20004198   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20004198   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20004198   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20004198   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20004398   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x000002e9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ed   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ed   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ed   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002ff   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SysCtlDelay                              0x0000030d   Thumb Code     6  sysctl.o(.emb_text)
    Reset_Handler                            0x00000315   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000409   Thumb Code     0  startup_tm4c123.o(.text)
    strlen                                   0x00000429   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x00000467   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000467   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004cd   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004f1   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004f1   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x00000501   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000503   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000505   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000507   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000507   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000507   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000054f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x0000056b   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0000056b   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0000056b   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0000056f   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005b9   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000603   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000615   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000615   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000615   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000061d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000629   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000629   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000062b   Thumb Code     0  indicate_semi.o(.text)
    ADC_Init                                 0x0000062d   Thumb Code   116  trial2.o(.text.ADC_Init)
    Buzzer_Task                              0x000006a1   Thumb Code    58  trial2.o(.text.Buzzer_Task)
    GPIODirModeSet                           0x000006dd   Thumb Code    44  gpio.o(.text.GPIODirModeSet)
    GPIOPadConfigSet                         0x00000709   Thumb Code   380  gpio.o(.text.GPIOPadConfigSet)
    GPIOPinTypeGPIOOutput                    0x00000885   Thumb Code    26  gpio.o(.text.GPIOPinTypeGPIOOutput)
    GPIOPinWrite                             0x000008a1   Thumb Code     6  gpio.o(.text.GPIOPinWrite)
    LCD_CTRL_BUS                             0x000008a9   Thumb Code    12  lcd.o(.text.LCD_CTRL_BUS)
    LCD_DATA_BUS                             0x000008b5   Thumb Code    24  lcd.o(.text.LCD_DATA_BUS)
    LCD_Task                                 0x000008cd   Thumb Code   200  trial2.o(.text.LCD_Task)
    LCD_clear                                0x000009ad   Thumb Code    24  lcd.o(.text.LCD_clear)
    LCD_create                               0x000009c5   Thumb Code    64  lcd.o(.text.LCD_create)
    LCD_inc_cnt                              0x00000a05   Thumb Code    60  lcd.o(.text.LCD_inc_cnt)
    LCD_init                                 0x00000a41   Thumb Code   162  lcd.o(.text.LCD_init)
    LCD_sendByte                             0x00000ae5   Thumb Code    76  lcd.o(.text.LCD_sendByte)
    LCD_sendNibble                           0x00000b31   Thumb Code    88  lcd.o(.text.LCD_sendNibble)
    LCD_sendString                           0x00000b89   Thumb Code    42  lcd.o(.text.LCD_sendString)
    LCD_setPosition                          0x00000bb5   Thumb Code    36  lcd.o(.text.LCD_setPosition)
    LCD_setup                                0x00000bd9   Thumb Code    50  lcd.o(.text.LCD_setup)
    Main_Task                                0x00000c11   Thumb Code   416  trial2.o(.text.Main_Task)
    PORTE_init                               0x00000db1   Thumb Code    58  trial2.o(.text.PORTE_init)
    PORTF_init                               0x00000ded   Thumb Code    70  trial2.o(.text.PORTF_init)
    PROJECT_Init                             0x00000e35   Thumb Code    80  trial2.o(.text.PROJECT_Init)
    PendSV_Handler                           0x00000e91   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000f01   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000f25   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000f55   Thumb Code   112  system_tm4c123.o(.text.SystemInit)
    UART0_Receiver                           0x00000fc5   Thumb Code    20  trial2.o(.text.UART0_Receiver)
    UART0_Transmitter                        0x00000fd9   Thumb Code    18  trial2.o(.text.UART0_Transmitter)
    UART_Init                                0x00000fed   Thumb Code   100  trial2.o(.text.UART_Init)
    UART_Task                                0x00001051   Thumb Code    92  trial2.o(.text.UART_Task)
    eTaskConfirmSleepModeStatus              0x00001111   Thumb Code    60  tasks.o(.text.eTaskConfirmSleepModeStatus)
    itoa                                     0x0000114d   Thumb Code   106  trial2.o(.text.itoa)
    main                                     0x000011b9   Thumb Code   116  main0.o(.text.main)
    printstring                              0x00001271   Thumb Code    28  trial2.o(.text.printstring)
    pvPortMalloc                             0x00001891   Thumb Code    90  heap_1.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x000018ed   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    reverse                                  0x00001915   Thumb Code    32  trial2.o(.text.reverse)
    swap                                     0x00001935   Thumb Code    10  trial2.o(.text.swap)
    uxListRemove                             0x00001941   Thumb Code    36  list.o(.text.uxListRemove)
    vListInitialise                          0x00001965   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x0000197d   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001985   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x000019c1   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000019f1   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00001a39   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x00001a69   Thumb Code    26  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001a85   Thumb Code   100  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00001ae9   Thumb Code   276  port.o(.text.vPortSuppressTicksAndSleep)
    vTaskDelay                               0x00001bfd   Thumb Code    84  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00001c51   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001c6d   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001c7d   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskStartScheduler                      0x00001cb1   Thumb Code   132  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00001d3d   Thumb Code    54  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00001d75   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00001d85   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00001e0d   Thumb Code   274  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00001f21   Thumb Code    66  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00001f65   Thumb Code   126  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00001fe5   Thumb Code   464  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x000021b5   Thumb Code   388  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002339   Thumb Code   162  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000023dd   Thumb Code    96  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x0000243d   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x00002465   Thumb Code   356  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x000025c9   Thumb Code   178  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x0000267d   Thumb Code   156  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002719   Thumb Code   280  tasks.o(.text.xTaskResumeAll)
    SysCtlPeripheralEnable                   0x00002831   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    __aeabi_d2f                              0x00002859   Thumb Code     0  d2f.o(x$fpl$d2f)
    _d2f                                     0x00002859   Thumb Code    98  d2f.o(x$fpl$d2f)
    __aeabi_ddiv                             0x000028bd   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x000028bd   Thumb Code   556  ddiv.o(x$fpl$ddiv)
    __aeabi_d2iz                             0x00002b71   Thumb Code     0  dfix.o(x$fpl$dfix)
    _dfix                                    0x00002b71   Thumb Code    94  dfix.o(x$fpl$dfix)
    __aeabi_i2d                              0x00002bcf   Thumb Code     0  dflt_clz.o(x$fpl$dflt)
    _dflt                                    0x00002bcf   Thumb Code    46  dflt_clz.o(x$fpl$dflt)
    __aeabi_dmul                             0x00002bfd   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x00002bfd   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x00002d51   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x00002ded   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_f2d                              0x00002df9   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x00002df9   Thumb Code    86  f2d.o(x$fpl$f2d)
    __fpl_fnaninf                            0x00002e4f   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    _fp_init                                 0x00002edb   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00002ef3   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00002ef3   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fpl_fretinf                            0x00002ef5   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    __I$use$fp                               0x00002efe   Number         0  usenofp.o(x$fpl$usenofp)
    Region$$Table$$Base                      0x00002f00   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002f20   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x2000006c   Data           4  tasks.o(.bss.pxCurrentTCB)
    xBuzzerQueue                             0x20004100   Data           4  trial2.o(.bss.xBuzzerQueue)
    xLCDQueue                                0x20004130   Data           4  trial2.o(.bss.xLCDQueue)
    xUARTQueue                               0x2000418c   Data           4  trial2.o(.bss.xUARTQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000315

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002f28, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002f20, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          199    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1059  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1255    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO         1257    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO         1259    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO         1119    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO         1125    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1128    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1131    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1133    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1135    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1138    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1140    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1142    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1144    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1146    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1148    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1150    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1152    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1154    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1156    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1158    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1162    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1164    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1166    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1168    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000002   Code   RO         1169    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x000002e8   0x000002e8   0x00000002   Code   RO         1191    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1206    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1208    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1211    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1214    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1216    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1219    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO         1220    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1081    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1096    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO         1108    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f2   0x000002f2   0x00000000   Code   RO         1098    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO         1099    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO         1101    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000008   Code   RO         1102    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO         1123    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000300   0x00000300   0x00000000   Code   RO         1171    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000300   0x00000300   0x00000004   Code   RO         1172    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000006   Code   RO         1173    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000006   Code   RO          688    .emb_text           driverlib.lib(sysctl.o)
    0x00000312   0x00000312   0x00000002   PAD
    0x00000314   0x00000314   0x00000114   Code   RO          200  * .text               startup_tm4c123.o
    0x00000428   0x00000428   0x0000003e   Code   RO         1051    .text               c_w.l(strlen.o)
    0x00000466   0x00000466   0x0000008a   Code   RO         1053    .text               c_w.l(rt_memcpy_v6.o)
    0x000004f0   0x000004f0   0x00000010   Code   RO         1055    .text               c_w.l(aeabi_memset4.o)
    0x00000500   0x00000500   0x00000006   Code   RO         1057    .text               c_w.l(heapauxi.o)
    0x00000506   0x00000506   0x00000064   Code   RO         1082    .text               c_w.l(rt_memcpy_w.o)
    0x0000056a   0x0000056a   0x0000004e   Code   RO         1084    .text               c_w.l(rt_memclr_w.o)
    0x000005b8   0x000005b8   0x0000004a   Code   RO         1110    .text               c_w.l(sys_stackheap_outer.o)
    0x00000602   0x00000602   0x00000012   Code   RO         1112    .text               c_w.l(exit.o)
    0x00000614   0x00000614   0x00000008   Code   RO         1120    .text               c_w.l(libspace.o)
    0x0000061c   0x0000061c   0x0000000c   Code   RO         1181    .text               c_w.l(sys_exit.o)
    0x00000628   0x00000628   0x00000002   Code   RO         1196    .text               c_w.l(use_no_semi.o)
    0x0000062a   0x0000062a   0x00000000   Code   RO         1198    .text               c_w.l(indicate_semi.o)
    0x0000062a   0x0000062a   0x00000002   PAD
    0x0000062c   0x0000062c   0x00000074   Code   RO          151    .text.ADC_Init      trial2.o
    0x000006a0   0x000006a0   0x0000003a   Code   RO          167    .text.Buzzer_Task   trial2.o
    0x000006da   0x000006da   0x00000002   PAD
    0x000006dc   0x000006dc   0x0000002c   Code   RO           34    .text.GPIODirModeSet  gpio.o
    0x00000708   0x00000708   0x0000017c   Code   RO           42    .text.GPIOPadConfigSet  gpio.o
    0x00000884   0x00000884   0x0000001a   Code   RO           86    .text.GPIOPinTypeGPIOOutput  gpio.o
    0x0000089e   0x0000089e   0x00000002   PAD
    0x000008a0   0x000008a0   0x00000006   Code   RO           66    .text.GPIOPinWrite  gpio.o
    0x000008a6   0x000008a6   0x00000002   PAD
    0x000008a8   0x000008a8   0x0000000c   Code   RO            4    .text.LCD_CTRL_BUS  lcd.o
    0x000008b4   0x000008b4   0x00000018   Code   RO            6    .text.LCD_DATA_BUS  lcd.o
    0x000008cc   0x000008cc   0x000000e0   Code   RO          169    .text.LCD_Task      trial2.o
    0x000009ac   0x000009ac   0x00000018   Code   RO           16    .text.LCD_clear     lcd.o
    0x000009c4   0x000009c4   0x00000040   Code   RO            2    .text.LCD_create    lcd.o
    0x00000a04   0x00000a04   0x0000003c   Code   RO           18    .text.LCD_inc_cnt   lcd.o
    0x00000a40   0x00000a40   0x000000a2   Code   RO           10    .text.LCD_init      lcd.o
    0x00000ae2   0x00000ae2   0x00000002   PAD
    0x00000ae4   0x00000ae4   0x0000004c   Code   RO           14    .text.LCD_sendByte  lcd.o
    0x00000b30   0x00000b30   0x00000058   Code   RO           12    .text.LCD_sendNibble  lcd.o
    0x00000b88   0x00000b88   0x0000002a   Code   RO           20    .text.LCD_sendString  lcd.o
    0x00000bb2   0x00000bb2   0x00000002   PAD
    0x00000bb4   0x00000bb4   0x00000024   Code   RO           22    .text.LCD_setPosition  lcd.o
    0x00000bd8   0x00000bd8   0x00000032   Code   RO            8    .text.LCD_setup     lcd.o
    0x00000c0a   0x00000c0a   0x00000006   PAD
    0x00000c10   0x00000c10   0x000001a0   Code   RO          163    .text.Main_Task     trial2.o
    0x00000db0   0x00000db0   0x0000003a   Code   RO          149    .text.PORTE_init    trial2.o
    0x00000dea   0x00000dea   0x00000002   PAD
    0x00000dec   0x00000dec   0x00000046   Code   RO          147    .text.PORTF_init    trial2.o
    0x00000e32   0x00000e32   0x00000002   PAD
    0x00000e34   0x00000e34   0x00000050   Code   RO          145    .text.PROJECT_Init  trial2.o
    0x00000e84   0x00000e84   0x0000000c   PAD
    0x00000e90   0x00000e90   0x00000064   Code   RO          262    .text.PendSV_Handler  port.o
    0x00000ef4   0x00000ef4   0x0000000c   PAD
    0x00000f00   0x00000f00   0x00000024   Code   RO          246    .text.SVC_Handler   port.o
    0x00000f24   0x00000f24   0x0000002e   Code   RO          264    .text.SysTick_Handler  port.o
    0x00000f52   0x00000f52   0x00000002   PAD
    0x00000f54   0x00000f54   0x00000070   Code   RO          211    .text.SystemInit    system_tm4c123.o
    0x00000fc4   0x00000fc4   0x00000014   Code   RO          155    .text.UART0_Receiver  trial2.o
    0x00000fd8   0x00000fd8   0x00000012   Code   RO          157    .text.UART0_Transmitter  trial2.o
    0x00000fea   0x00000fea   0x00000002   PAD
    0x00000fec   0x00000fec   0x00000064   Code   RO          153    .text.UART_Init     trial2.o
    0x00001050   0x00001050   0x000000c0   Code   RO          171    .text.UART_Task     trial2.o
    0x00001110   0x00001110   0x0000003c   Code   RO          481    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x0000114c   0x0000114c   0x0000006a   Code   RO          165    .text.itoa          trial2.o
    0x000011b6   0x000011b6   0x00000002   PAD
    0x000011b8   0x000011b8   0x000000b8   Code   RO          189    .text.main          main0.o
    0x00001270   0x00001270   0x0000001c   Code   RO          159    .text.printstring   trial2.o
    0x0000128c   0x0000128c   0x000000aa   Code   RO          405    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001336   0x00001336   0x00000002   PAD
    0x00001338   0x00001338   0x000000ae   Code   RO          393    .text.prvAddNewTaskToReadyList  tasks.o
    0x000013e6   0x000013e6   0x00000002   PAD
    0x000013e8   0x000013e8   0x0000004e   Code   RO          521    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001436   0x00001436   0x00000002   PAD
    0x00001438   0x00001438   0x00000026   Code   RO          341    .text.prvCopyDataFromQueue  queue.o
    0x0000145e   0x0000145e   0x00000002   PAD
    0x00001460   0x00001460   0x0000007a   Code   RO          327    .text.prvCopyDataToQueue  queue.o
    0x000014da   0x000014da   0x00000002   PAD
    0x000014dc   0x000014dc   0x00000012   Code   RO          397    .text.prvDeleteTCB  tasks.o
    0x000014ee   0x000014ee   0x00000002   PAD
    0x000014f0   0x000014f0   0x00000044   Code   RO          523    .text.prvGetExpectedIdleTime  tasks.o
    0x00001534   0x00001534   0x00000072   Code   RO          431    .text.prvIdleTask   tasks.o
    0x000015a6   0x000015a6   0x00000002   PAD
    0x000015a8   0x000015a8   0x00000024   Code   RO          307    .text.prvInitialiseNewQueue  queue.o
    0x000015cc   0x000015cc   0x0000009c   Code   RO          391    .text.prvInitialiseNewTask  tasks.o
    0x00001668   0x00001668   0x0000006e   Code   RO          519    .text.prvInitialiseTaskLists  tasks.o
    0x000016d6   0x000016d6   0x00000002   PAD
    0x000016d8   0x000016d8   0x00000018   Code   RO          343    .text.prvIsQueueEmpty  queue.o
    0x000016f0   0x000016f0   0x0000001c   Code   RO          331    .text.prvIsQueueFull  queue.o
    0x0000170c   0x0000170c   0x00000076   Code   RO          329    .text.prvNotifyQueueSetContainer  queue.o
    0x00001782   0x00001782   0x00000002   PAD
    0x00001784   0x00001784   0x00000028   Code   RO          254    .text.prvPortStartFirstTask  port.o
    0x000017ac   0x000017ac   0x00000028   Code   RO          399    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000017d4   0x000017d4   0x00000032   Code   RO          244    .text.prvTaskExitError  port.o
    0x00001806   0x00001806   0x00000002   PAD
    0x00001808   0x00001808   0x00000086   Code   RO          333    .text.prvUnlockQueue  queue.o
    0x0000188e   0x0000188e   0x00000002   PAD
    0x00001890   0x00001890   0x0000005a   Code   RO          284    .text.pvPortMalloc  heap_1.o
    0x000018ea   0x000018ea   0x00000002   PAD
    0x000018ec   0x000018ec   0x00000028   Code   RO          242    .text.pxPortInitialiseStack  port.o
    0x00001914   0x00001914   0x00000020   Code   RO          175    .text.reverse       trial2.o
    0x00001934   0x00001934   0x0000000a   Code   RO          173    .text.swap          trial2.o
    0x0000193e   0x0000193e   0x00000002   PAD
    0x00001940   0x00001940   0x00000024   Code   RO          232    .text.uxListRemove  list.o
    0x00001964   0x00001964   0x00000016   Code   RO          224    .text.vListInitialise  list.o
    0x0000197a   0x0000197a   0x00000002   PAD
    0x0000197c   0x0000197c   0x00000006   Code   RO          226    .text.vListInitialiseItem  list.o
    0x00001982   0x00001982   0x00000002   PAD
    0x00001984   0x00001984   0x0000003a   Code   RO          230    .text.vListInsert   list.o
    0x000019be   0x000019be   0x00000002   PAD
    0x000019c0   0x000019c0   0x0000001c   Code   RO          228    .text.vListInsertEnd  list.o
    0x000019dc   0x000019dc   0x00000014   Code   RO          252    .text.vPortEnableVFP  port.o
    0x000019f0   0x000019f0   0x00000046   Code   RO          258    .text.vPortEnterCritical  port.o
    0x00001a36   0x00001a36   0x00000002   PAD
    0x00001a38   0x00001a38   0x0000002e   Code   RO          260    .text.vPortExitCritical  port.o
    0x00001a66   0x00001a66   0x00000002   PAD
    0x00001a68   0x00001a68   0x0000001a   Code   RO          286    .text.vPortFree     heap_1.o
    0x00001a82   0x00001a82   0x00000002   PAD
    0x00001a84   0x00001a84   0x00000064   Code   RO          250    .text.vPortSetupTimerInterrupt  port.o
    0x00001ae8   0x00001ae8   0x00000114   Code   RO          266    .text.vPortSuppressTicksAndSleep  port.o
    0x00001bfc   0x00001bfc   0x00000054   Code   RO          409    .text.vTaskDelay    tasks.o
    0x00001c50   0x00001c50   0x0000001a   Code   RO          471    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00001c6a   0x00001c6a   0x00000002   PAD
    0x00001c6c   0x00001c6c   0x0000000e   Code   RO          475    .text.vTaskMissedYield  tasks.o
    0x00001c7a   0x00001c7a   0x00000002   PAD
    0x00001c7c   0x00001c7c   0x00000032   Code   RO          461    .text.vTaskPlaceOnEventList  tasks.o
    0x00001cae   0x00001cae   0x00000002   PAD
    0x00001cb0   0x00001cb0   0x0000008c   Code   RO          429    .text.vTaskStartScheduler  tasks.o
    0x00001d3c   0x00001d3c   0x00000036   Code   RO          455    .text.vTaskStepTick  tasks.o
    0x00001d72   0x00001d72   0x00000002   PAD
    0x00001d74   0x00001d74   0x00000010   Code   RO          403    .text.vTaskSuspendAll  tasks.o
    0x00001d84   0x00001d84   0x00000086   Code   RO          421    .text.vTaskSwitchContext  tasks.o
    0x00001e0a   0x00001e0a   0x00000002   PAD
    0x00001e0c   0x00001e0c   0x00000112   Code   RO          248    .text.xPortStartScheduler  port.o
    0x00001f1e   0x00001f1e   0x00000002   PAD
    0x00001f20   0x00001f20   0x00000042   Code   RO          305    .text.xQueueGenericCreate  queue.o
    0x00001f62   0x00001f62   0x00000002   PAD
    0x00001f64   0x00001f64   0x0000007e   Code   RO          303    .text.xQueueGenericReset  queue.o
    0x00001fe2   0x00001fe2   0x00000002   PAD
    0x00001fe4   0x00001fe4   0x000001d0   Code   RO          319    .text.xQueueGenericSend  queue.o
    0x000021b4   0x000021b4   0x00000184   Code   RO          339    .text.xQueueReceive  queue.o
    0x00002338   0x00002338   0x000000a2   Code   RO          473    .text.xTaskCheckForTimeOut  tasks.o
    0x000023da   0x000023da   0x00000002   PAD
    0x000023dc   0x000023dc   0x00000060   Code   RO          389    .text.xTaskCreate   tasks.o
    0x0000243c   0x0000243c   0x00000026   Code   RO          493    .text.xTaskGetSchedulerState  tasks.o
    0x00002462   0x00002462   0x00000002   PAD
    0x00002464   0x00002464   0x00000164   Code   RO          435    .text.xTaskIncrementTick  tasks.o
    0x000025c8   0x000025c8   0x000000b2   Code   RO          497    .text.xTaskPriorityDisinherit  tasks.o
    0x0000267a   0x0000267a   0x00000002   PAD
    0x0000267c   0x0000267c   0x0000009c   Code   RO          465    .text.xTaskRemoveFromEventList  tasks.o
    0x00002718   0x00002718   0x00000118   Code   RO          407    .text.xTaskResumeAll  tasks.o
    0x00002830   0x00002830   0x00000028   Code   RO          722    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00002858   0x00002858   0x00000062   Code   RO         1061    x$fpl$d2f           fz_wm.l(d2f.o)
    0x000028ba   0x000028ba   0x00000002   PAD
    0x000028bc   0x000028bc   0x000002b4   Code   RO         1064    x$fpl$ddiv          fz_wm.l(ddiv.o)
    0x00002b70   0x00002b70   0x0000005e   Code   RO         1067    x$fpl$dfix          fz_wm.l(dfix.o)
    0x00002bce   0x00002bce   0x0000002e   Code   RO         1072    x$fpl$dflt          fz_wm.l(dflt_clz.o)
    0x00002bfc   0x00002bfc   0x00000154   Code   RO         1077    x$fpl$dmul          fz_wm.l(dmul.o)
    0x00002d50   0x00002d50   0x0000009c   Code   RO         1086    x$fpl$dnaninf       fz_wm.l(dnaninf.o)
    0x00002dec   0x00002dec   0x0000000c   Code   RO         1088    x$fpl$dretinf       fz_wm.l(dretinf.o)
    0x00002df8   0x00002df8   0x00000056   Code   RO         1079    x$fpl$f2d           fz_wm.l(f2d.o)
    0x00002e4e   0x00002e4e   0x0000008c   Code   RO         1090    x$fpl$fnaninf       fz_wm.l(fnaninf.o)
    0x00002eda   0x00002eda   0x0000001a   Code   RO         1179    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00002ef4   0x00002ef4   0x0000000a   Code   RO         1092    x$fpl$fretinf       fz_wm.l(fretinf.o)
    0x00002efe   0x00002efe   0x00000000   Code   RO         1094    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x00002efe   0x00002efe   0x00000002   Data   RO          180    .rodata.str1.1      trial2.o
    0x00002f00   0x00002f00   0x00000020   Data   RO         1254    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00002f20, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00002f20   0x00000004   Data   RW          213    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00002f24   0x00000004   Data   RW          272    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x00002f28, Size: 0x00004390, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x00000060   Zero   RW         1121    .bss                c_w.l(libspace.o)
    0x20000068        -       0x00000004   Zero   RW          292    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x2000006c        -       0x00000004   Zero   RW          525    .bss.pxCurrentTCB   tasks.o
    0x20000070        -       0x00000004   Zero   RW          535    .bss.pxDelayedTaskList  tasks.o
    0x20000074        -       0x00000004   Zero   RW          536    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000078        -       0x00000064   Zero   RW          526    .bss.pxReadyTasksLists  tasks.o
    0x200000dc        -       0x00004000   Zero   RW          293    .bss.ucHeap         heap_1.o
    0x200040dc        -       0x00000001   Zero   RW          270    .bss.ucMaxSysCallPriority  port.o
    0x200040dd   0x00002f28   0x00000003   PAD
    0x200040e0        -       0x00000004   Zero   RW          271    .bss.ulMaxPRIGROUPValue  port.o
    0x200040e4        -       0x00000001   Zero   RW          275    .bss.ulStoppedTimerCompensation  port.o
    0x200040e5   0x00002f28   0x00000003   PAD
    0x200040e8        -       0x00000004   Zero   RW          274    .bss.ulTimerCountsForOneTick  port.o
    0x200040ec        -       0x00000004   Zero   RW          531    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200040f0        -       0x00000004   Zero   RW          530    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200040f4        -       0x00000004   Zero   RW          533    .bss.uxSchedulerSuspended  tasks.o
    0x200040f8        -       0x00000004   Zero   RW          528    .bss.uxTaskNumber   tasks.o
    0x200040fc        -       0x00000004   Zero   RW          527    .bss.uxTopReadyPriority  tasks.o
    0x20004100        -       0x00000004   Zero   RW          179    .bss.xBuzzerQueue   trial2.o
    0x20004104        -       0x00000014   Zero   RW          544    .bss.xDelayedTaskList1  tasks.o
    0x20004118        -       0x00000014   Zero   RW          545    .bss.xDelayedTaskList2  tasks.o
    0x2000412c        -       0x00000004   Zero   RW          539    .bss.xIdleTaskHandle  tasks.o
    0x20004130        -       0x00000004   Zero   RW          178    .bss.xLCDQueue      trial2.o
    0x20004134        -       0x00000004   Zero   RW          273    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20004138        -       0x00000004   Zero   RW          294    .bss.xNextFreeByte  heap_1.o
    0x2000413c        -       0x00000004   Zero   RW          540    .bss.xNextTaskUnblockTime  tasks.o
    0x20004140        -       0x00000004   Zero   RW          543    .bss.xNumOfOverflows  tasks.o
    0x20004144        -       0x00000004   Zero   RW          542    .bss.xPendedTicks   tasks.o
    0x20004148        -       0x00000014   Zero   RW          538    .bss.xPendingReadyList  tasks.o
    0x2000415c        -       0x00000004   Zero   RW          532    .bss.xSchedulerRunning  tasks.o
    0x20004160        -       0x00000014   Zero   RW          537    .bss.xSuspendedTaskList  tasks.o
    0x20004174        -       0x00000014   Zero   RW          529    .bss.xTasksWaitingTermination  tasks.o
    0x20004188        -       0x00000004   Zero   RW          534    .bss.xTickCount     tasks.o
    0x2000418c        -       0x00000004   Zero   RW          177    .bss.xUARTQueue     trial2.o
    0x20004190        -       0x00000004   Zero   RW          541    .bss.xYieldPending  tasks.o
    0x20004194   0x00002f28   0x00000004   PAD
    0x20004198        -       0x00000000   Zero   RW          198    HEAP                startup_tm4c123.o
    0x20004198        -       0x00000200   Zero   RW          197    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       456          0          0          0          0      12679   gpio.o
       116          0          0          0      16392       1765   heap_1.o
       638          0          0          0          0       3834   lcd.o
       150          0          0          0          0       2313   list.o
       184         68          0          0          0        339   main0.o
      1098         16          0          4         14       4987   port.o
      1544          0          0          0          0      21721   queue.o
       276         24        620          0        512       5456   startup_tm4c123.o
       112          0          0          4          0       6500   system_tm4c123.o
      2772          8          0          0        260      31035   tasks.o
      1528        148          2          0         12      12066   trial2.o

    ----------------------------------------------------------------------
      8984        276        654          8      17200     102695   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       110         12          0          0         10          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
         0          0          0          0          0       4492   interrupt.o
        46          4          0          0          0        877   sysctl.o
        98          4          0          0          0        140   d2f.o
       692        140          0          0          0        264   ddiv.o
        94          4          0          0          0        140   dfix.o
        46          0          0          0          0        116   dflt_clz.o
       340         12          0          0          0        152   dmul.o
       156          4          0          0          0        140   dnaninf.o
        12          0          0          0          0        116   dretinf.o
        86          4          0          0          0        132   f2d.o
       140          4          0          0          0        132   fnaninf.o
        26          0          0          0          0        116   fpinit.o
        10          0          0          0          0        116   fretinf.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      2426        192          0          0         96       7889   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       670         16          0          0         96        956   c_w.l
        46          4          0          0          0       5369   driverlib.lib
      1700        172          0          0          0       1564   fz_wm.l

    ----------------------------------------------------------------------
      2426        192          0          0         96       7889   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11410        468        654          8      17296     108924   Grand Totals
     11410        468        654          8      17296     108924   ELF Image Totals
     11410        468        654          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12064 (  11.78kB)
    Total RW  Size (RW Data + ZI Data)             17304 (  16.90kB)
    Total ROM Size (Code + RO Data + RW Data)      12072 (  11.79kB)

==============================================================================

